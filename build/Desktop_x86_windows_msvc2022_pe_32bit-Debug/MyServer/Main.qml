import QtQuick
import QtQuick.Controls
import QtQuick.Layouts
import QtQuick.Dialogs
import FileServer 1.0

ApplicationWindow {
    id: mainWindow
    title: "File Transfer Server"
    width: 500
    height: 600
    visible: true
    minimumWidth: 400
    minimumHeight: 400

    // –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±—É—Ñ–µ—Ä–æ–º –æ–±–º–µ–Ω–∞
    property var clipboard: Qt.createQmlObject(
        "import QtQuick 2.0; Clipboard {}",
        mainWindow,
        "ClipboardObject"
    )

    // C++ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–µ—Ä–≤–µ—Ä–∞
    TcpServerHandler {
        id: serverHandler
        Component.onCompleted: {
            console.log("TcpServerHandler created successfully!");
        }


    }

    // –ú–æ–¥–µ–ª—å –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    ListModel {
        id: receivedFilesModel
    }

    ColumnLayout {
        anchors.fill: parent
        anchors.margins: 20
        spacing: 15

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫
        Label {
            Layout.fillWidth: true
            text: "üìÅ File Transfer Server"
            font.bold: true
            font.pixelSize: 20
            horizontalAlignment: Text.AlignHCenter
        }

        // –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
        Label {
            id: statusLabel
            Layout.fillWidth: true
            text: "–°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            color: "gray"
            font.pixelSize: 14
            horizontalAlignment: Text.AlignHCenter
            wrapMode: Text.Wrap
        }

        // –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º
        RowLayout {
            Layout.fillWidth: true
            spacing: 10

            Button {
                id: toggleButton
                Layout.fillWidth: true
                text: serverHandler.isRunning ? "üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä" : "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä"
                onClicked: {
                    if (serverHandler.isRunning) {
                        serverHandler.stopServer();
                        statusLabel.text = "–°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω";
                        statusLabel.color = "gray";
                    } else {
                        serverHandler.startServer();
                    }
                }
            }

            Button {
                id: copyButton
                Layout.fillWidth: true
                text: "üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∞–¥—Ä–µ—Å"
                enabled: serverHandler.isRunning && serverHandler.serverAddress
                onClicked: {
                    if (serverHandler.serverAddress) {
                        // –ü—Ä–æ—Å—Ç–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
                        ipText.text = serverHandler.serverAddress;
                        ipText.selectAll();
                        ipText.copy();
                        ipText.deselect();

                        statusLabel.text = "–ê–¥—Ä–µ—Å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!";
                        statusLabel.color = "darkblue";
                        resetStatusTimer.start();
                    }
                }
            }
        }

        // –°–∫—Ä—ã—Ç—ã–π Text –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        Text {
            id: ipText
            visible: false
        }

        // –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        Rectangle {
            Layout.fillWidth: true
            height: 1
            color: "#e0e0e0"
        }

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
        GroupBox {
            Layout.fillWidth: true
            title: "üì° –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ"

            ColumnLayout {
                width: parent.width
                spacing: 8

                // –°—Ç–∞—Ç—É—Å
                RowLayout {
                    Layout.fillWidth: true
                    Label {
                        text: "–°—Ç–∞—Ç—É—Å:"
                        font.bold: true
                        color: "gray"
                    }
                    Label {
                        Layout.fillWidth: true
                        text: serverHandler.isRunning ? "‚úÖ –ó–∞–ø—É—â–µ–Ω" : "‚ùå –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                        color: serverHandler.isRunning ? "green" : "red"
                    }
                }

                // –ê–¥—Ä–µ—Å
                RowLayout {
                    Layout.fillWidth: true
                    Label {
                        text: "–ê–¥—Ä–µ—Å:"
                        font.bold: true
                        color: "gray"
                    }
                    Label {
                        Layout.fillWidth: true
                        text: serverHandler.serverAddress || "–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
                        color: "blue"
                        wrapMode: Text.Wrap
                    }
                }

                // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤
                RowLayout {
                    Layout.fillWidth: true
                    Label {
                        text: "–ü–æ–ª—É—á–µ–Ω–æ —Ñ–∞–π–ª–æ–≤:"
                        font.bold: true
                        color: "gray"
                    }
                    Label {
                        text: receivedFilesModel.count + " —à—Ç."
                    }
                }
            }
        }

        // –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        Button {
            Layout.fillWidth: true
            text: "üì§ –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏"
            onClicked: fileDialog.open()
        }

        // –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        Rectangle {
            Layout.fillWidth: true
            height: 1
            color: "#e0e0e0"
        }

        // –°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        GroupBox {
            Layout.fillWidth: true
            Layout.fillHeight: true
            title: "üìÇ –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã (" + receivedFilesModel.count + ")"

            ScrollView {
                anchors.fill: parent
                clip: true

                ListView {
                    id: filesListView
                    width: parent.width
                    model: receivedFilesModel
                    spacing: 5

                    delegate: Rectangle {
                        width: filesListView.width
                        height: 50
                        radius: 5
                        color: index % 2 === 0 ? "#f8f9fa" : "#ffffff"
                        border.color: "#e9ecef"

                        RowLayout {
                            anchors.fill: parent
                            anchors.margins: 5
                            spacing: 10

                            Label {
                                text: "üìÑ"
                                font.pixelSize: 16
                            }

                            ColumnLayout {
                                Layout.fillWidth: true
                                spacing: 2

                                Label {
                                    text: fileName
                                    elide: Text.ElideMiddle
                                    font.bold: true
                                }

                                Label {
                                    text: "–í—Ä–µ–º—è: " + time
                                    font.pixelSize: 10
                                    color: "gray"
                                }
                            }

                            Label {
                                text: status
                                color: "green"
                                font.bold: true
                            }
                        }
                    }
                }
            }
        }

        // –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å–ø–∏—Å–∫–∞
        Button {
            Layout.fillWidth: true
            text: "üßπ –û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫"
            enabled: receivedFilesModel.count > 0
            onClicked: {
                receivedFilesModel.clear();
                statusLabel.text = "–°–ø–∏—Å–æ–∫ –æ—á–∏—â–µ–Ω";
                statusLabel.color = "orange";
                resetStatusTimer.start();
            }
        }
    }

    // –î–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
    FileDialog {
        id: fileDialog
        title: "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏"


        onAccepted: {
            // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É
            var filePath = "";
            if (fileDialog.fileUrl) {
                filePath = fileDialog.fileUrl.toString();
                // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å "file:///" –¥–ª—è Windows
                if (filePath.startsWith("file:///")) {
                    filePath = filePath.substring(8); // –î–ª—è Windows
                }
            }

            statusLabel.text = "–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: " + (filePath || "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–∞–π–ª");
            statusLabel.color = "purple";
            resetStatusTimer.start();

            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞
            console.log("Selected file:", filePath);
        }

        onRejected: {
            statusLabel.text = "–í—ã–±–æ—Ä —Ñ–∞–π–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω";
            statusLabel.color = "gray";
            resetStatusTimer.start();
        }
    }

    // –¢–∞–π–º–µ—Ä –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å—Ç–∞—Ç—É—Å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    Timer {
        id: resetStatusTimer
        interval: 3000
        onTriggered: {
            if (serverHandler.isRunning) {
                statusLabel.text = "–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: " + serverHandler.serverAddress;
                statusLabel.color = "green";
            } else {
                statusLabel.text = "–°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω";
                statusLabel.color = "gray";
            }
        }
    }
}
